#!/usr/bin/env node

// node 内置文件模块
const fs = require('fs')
const path = require('path')
const program = require('commander')
const chalk = require('chalk')
const ora = require('ora')
const download = require('download-git-repo')
const tplObj = require(`${__dirname}/../template`)
 
program.usage('<template-name> [project-name]')
program.parse(process.argv)
// 当没有输入参数的时候给个提示
if (program.args.length < 1) return program.help()
 
// 好比 vue init webpack project-name 的命令一样，第一个参数是 webpack，第二个参数是 project-name
let templateName = program.args[0]
let projectName = program.args[1]
// 小小校验一下参数
if (!tplObj[templateName]) {
 console.log(chalk.red('\n Template does not exit! \n '))
 return
}
if (!projectName) {
 console.log(chalk.red('\n Project should not be empty! \n '))
 return
}
 
url = tplObj[templateName];
 
console.log(chalk.white('\n Start generating... \n'))
// 出现加载图标
const spinner = ora("Downloading...");
spinner.start();
// 执行下载方法并传入参数
download (
    url,
    projectName,
    err => {
        if (err) {
            spinner.fail();
            console.log(chalk.red(`Generation failed. ${err}`))
            return
        }
        // 结束加载图标
        spinner.succeed();

        /* 处理模版开始 */
        setTimeout(()=>{
            console.log(chalk.blue(`\n Start ${projectName} writing... \n`))
            // 读取根目录下的 template.json
            // const tplObj = path.resolve(path.resolve(__dirname),`./${projectName}/code/package.json`);        
            const tplObj = path.resolve(process.cwd(),`./${projectName}/code/package.json`);
            console.log(tplObj);
            const packageJson = JSON.parse(fs.readFileSync(tplObj, 'utf-8'));
            // 修改字段
            packageJson.name = projectName;
            packageJson.lastTime = new Date().toLocaleString();
            // 将修改后的JSON内容写回package.json文件
            fs.writeFileSync(tplObj, JSON.stringify(packageJson, null, 2));
            console.log(chalk.blue('\n Writing completed!'))
        }, 1000);
        /* 处理结束 */
        

        console.log(chalk.green('\n Generation completed! '))
        console.log('\n To get started ')
        console.log(`\n cd ${projectName}/code `)
        console.log('\n npm install ')
        console.log('\n npm run serve ')
    }
)